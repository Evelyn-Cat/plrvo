[2024-12-29 08:14:10,344] [INFO] [real_accelerator.py:133:get_accelerator] Setting ds_accelerator to cuda (auto detect)
running stars at 2024-12-29 08:14:11.361634
confirm imported Gaussian
 | tokenizer: BertTokenizer(name_or_path='bert-base-uncased', vocab_size=30522, model_max_length=512, is_fast=False, padding_side='right', truncation_side='right', special_tokens={'unk_token': '[UNK]', 'sep_token': '[SEP]', 'pad_token': '[PAD]', 'cls_token': '[CLS]', 'mask_token': '[MASK]'}, clean_up_tokenization_spaces=True), size: 30522 



 *** dataset sizes: 
train: 104743
valid: 5463
 ***
 | model type: 
<class 'transformers.models.bert.modeling_bert.BertForSequenceClassification'>
attention_only: False | randomly_initialize: False
Params to update: 
[
    "bert.embeddings.word_embeddings.weight",
    "bert.embeddings.position_embeddings.weight",
    "bert.embeddings.token_type_embeddings.weight",
    "bert.embeddings.LayerNorm.weight",
    "bert.embeddings.LayerNorm.bias",
    "bert.encoder.layer.0.attention.self.query.weight",
    "bert.encoder.layer.0.attention.self.query.bias",
    "bert.encoder.layer.0.attention.self.key.weight",
    "bert.encoder.layer.0.attention.self.key.bias",
    "bert.encoder.layer.0.attention.self.value.weight",
    "bert.encoder.layer.0.attention.self.value.bias",
    "bert.encoder.layer.0.attention.output.dense.weight",
    "bert.encoder.layer.0.attention.output.dense.bias",
    "bert.encoder.layer.0.attention.output.LayerNorm.weight",
    "bert.encoder.layer.0.attention.output.LayerNorm.bias",
    "bert.encoder.layer.0.intermediate.dense.weight",
    "bert.encoder.layer.0.intermediate.dense.bias",
    "bert.encoder.layer.0.output.dense.weight",
    "bert.encoder.layer.0.output.dense.bias",
    "bert.encoder.layer.0.output.LayerNorm.weight",
    "bert.encoder.layer.0.output.LayerNorm.bias",
    "bert.encoder.layer.1.attention.self.query.weight",
    "bert.encoder.layer.1.attention.self.query.bias",
    "bert.encoder.layer.1.attention.self.key.weight",
    "bert.encoder.layer.1.attention.self.key.bias",
    "bert.encoder.layer.1.attention.self.value.weight",
    "bert.encoder.layer.1.attention.self.value.bias",
    "bert.encoder.layer.1.attention.output.dense.weight",
    "bert.encoder.layer.1.attention.output.dense.bias",
    "bert.encoder.layer.1.attention.output.LayerNorm.weight",
    "bert.encoder.layer.1.attention.output.LayerNorm.bias",
    "bert.encoder.layer.1.intermediate.dense.weight",
    "bert.encoder.layer.1.intermediate.dense.bias",
    "bert.encoder.layer.1.output.dense.weight",
    "bert.encoder.layer.1.output.dense.bias",
    "bert.encoder.layer.1.output.LayerNorm.weight",
    "bert.encoder.layer.1.output.LayerNorm.bias",
    "bert.encoder.layer.2.attention.self.query.weight",
    "bert.encoder.layer.2.attention.self.query.bias",
    "bert.encoder.layer.2.attention.self.key.weight",
    "bert.encoder.layer.2.attention.self.key.bias",
    "bert.encoder.layer.2.attention.self.value.weight",
    "bert.encoder.layer.2.attention.self.value.bias",
    "bert.encoder.layer.2.attention.output.dense.weight",
    "bert.encoder.layer.2.attention.output.dense.bias",
    "bert.encoder.layer.2.attention.output.LayerNorm.weight",
    "bert.encoder.layer.2.attention.output.LayerNorm.bias",
    "bert.encoder.layer.2.intermediate.dense.weight",
    "bert.encoder.layer.2.intermediate.dense.bias",
    "bert.encoder.layer.2.output.dense.weight",
    "bert.encoder.layer.2.output.dense.bias",
    "bert.encoder.layer.2.output.LayerNorm.weight",
    "bert.encoder.layer.2.output.LayerNorm.bias",
    "bert.encoder.layer.3.attention.self.query.weight",
    "bert.encoder.layer.3.attention.self.query.bias",
    "bert.encoder.layer.3.attention.self.key.weight",
    "bert.encoder.layer.3.attention.self.key.bias",
    "bert.encoder.layer.3.attention.self.value.weight",
    "bert.encoder.layer.3.attention.self.value.bias",
    "bert.encoder.layer.3.attention.output.dense.weight",
    "bert.encoder.layer.3.attention.output.dense.bias",
    "bert.encoder.layer.3.attention.output.LayerNorm.weight",
    "bert.encoder.layer.3.attention.output.LayerNorm.bias",
    "bert.encoder.layer.3.intermediate.dense.weight",
    "bert.encoder.layer.3.intermediate.dense.bias",
    "bert.encoder.layer.3.output.dense.weight",
    "bert.encoder.layer.3.output.dense.bias",
    "bert.encoder.layer.3.output.LayerNorm.weight",
    "bert.encoder.layer.3.output.LayerNorm.bias",
    "bert.encoder.layer.4.attention.self.query.weight",
    "bert.encoder.layer.4.attention.self.query.bias",
    "bert.encoder.layer.4.attention.self.key.weight",
    "bert.encoder.layer.4.attention.self.key.bias",
    "bert.encoder.layer.4.attention.self.value.weight",
    "bert.encoder.layer.4.attention.self.value.bias",
    "bert.encoder.layer.4.attention.output.dense.weight",
    "bert.encoder.layer.4.attention.output.dense.bias",
    "bert.encoder.layer.4.attention.output.LayerNorm.weight",
    "bert.encoder.layer.4.attention.output.LayerNorm.bias",
    "bert.encoder.layer.4.intermediate.dense.weight",
    "bert.encoder.layer.4.intermediate.dense.bias",
    "bert.encoder.layer.4.output.dense.weight",
    "bert.encoder.layer.4.output.dense.bias",
    "bert.encoder.layer.4.output.LayerNorm.weight",
    "bert.encoder.layer.4.output.LayerNorm.bias",
    "bert.encoder.layer.5.attention.self.query.weight",
    "bert.encoder.layer.5.attention.self.query.bias",
    "bert.encoder.layer.5.attention.self.key.weight",
    "bert.encoder.layer.5.attention.self.key.bias",
    "bert.encoder.layer.5.attention.self.value.weight",
    "bert.encoder.layer.5.attention.self.value.bias",
    "bert.encoder.layer.5.attention.output.dense.weight",
    "bert.encoder.layer.5.attention.output.dense.bias",
    "bert.encoder.layer.5.attention.output.LayerNorm.weight",
    "bert.encoder.layer.5.attention.output.LayerNorm.bias",
    "bert.encoder.layer.5.intermediate.dense.weight",
    "bert.encoder.layer.5.intermediate.dense.bias",
    "bert.encoder.layer.5.output.dense.weight",
    "bert.encoder.layer.5.output.dense.bias",
    "bert.encoder.layer.5.output.LayerNorm.weight",
    "bert.encoder.layer.5.output.LayerNorm.bias",
    "bert.encoder.layer.6.attention.self.query.weight",
    "bert.encoder.layer.6.attention.self.query.bias",
    "bert.encoder.layer.6.attention.self.key.weight",
    "bert.encoder.layer.6.attention.self.key.bias",
    "bert.encoder.layer.6.attention.self.value.weight",
    "bert.encoder.layer.6.attention.self.value.bias",
    "bert.encoder.layer.6.attention.output.dense.weight",
    "bert.encoder.layer.6.attention.output.dense.bias",
    "bert.encoder.layer.6.attention.output.LayerNorm.weight",
    "bert.encoder.layer.6.attention.output.LayerNorm.bias",
    "bert.encoder.layer.6.intermediate.dense.weight",
    "bert.encoder.layer.6.intermediate.dense.bias",
    "bert.encoder.layer.6.output.dense.weight",
    "bert.encoder.layer.6.output.dense.bias",
    "bert.encoder.layer.6.output.LayerNorm.weight",
    "bert.encoder.layer.6.output.LayerNorm.bias",
    "bert.encoder.layer.7.attention.self.query.weight",
    "bert.encoder.layer.7.attention.self.query.bias",
    "bert.encoder.layer.7.attention.self.key.weight",
    "bert.encoder.layer.7.attention.self.key.bias",
    "bert.encoder.layer.7.attention.self.value.weight",
    "bert.encoder.layer.7.attention.self.value.bias",
    "bert.encoder.layer.7.attention.output.dense.weight",
    "bert.encoder.layer.7.attention.output.dense.bias",
    "bert.encoder.layer.7.attention.output.LayerNorm.weight",
    "bert.encoder.layer.7.attention.output.LayerNorm.bias",
    "bert.encoder.layer.7.intermediate.dense.weight",
    "bert.encoder.layer.7.intermediate.dense.bias",
    "bert.encoder.layer.7.output.dense.weight",
    "bert.encoder.layer.7.output.dense.bias",
    "bert.encoder.layer.7.output.LayerNorm.weight",
    "bert.encoder.layer.7.output.LayerNorm.bias",
    "bert.encoder.layer.8.attention.self.query.weight",
    "bert.encoder.layer.8.attention.self.query.bias",
    "bert.encoder.layer.8.attention.self.key.weight",
    "bert.encoder.layer.8.attention.self.key.bias",
    "bert.encoder.layer.8.attention.self.value.weight",
    "bert.encoder.layer.8.attention.self.value.bias",
    "bert.encoder.layer.8.attention.output.dense.weight",
    "bert.encoder.layer.8.attention.output.dense.bias",
    "bert.encoder.layer.8.attention.output.LayerNorm.weight",
    "bert.encoder.layer.8.attention.output.LayerNorm.bias",
    "bert.encoder.layer.8.intermediate.dense.weight",
    "bert.encoder.layer.8.intermediate.dense.bias",
    "bert.encoder.layer.8.output.dense.weight",
    "bert.encoder.layer.8.output.dense.bias",
    "bert.encoder.layer.8.output.LayerNorm.weight",
    "bert.encoder.layer.8.output.LayerNorm.bias",
    "bert.encoder.layer.9.attention.self.query.weight",
    "bert.encoder.layer.9.attention.self.query.bias",
    "bert.encoder.layer.9.attention.self.key.weight",
    "bert.encoder.layer.9.attention.self.key.bias",
    "bert.encoder.layer.9.attention.self.value.weight",
    "bert.encoder.layer.9.attention.self.value.bias",
    "bert.encoder.layer.9.attention.output.dense.weight",
    "bert.encoder.layer.9.attention.output.dense.bias",
    "bert.encoder.layer.9.attention.output.LayerNorm.weight",
    "bert.encoder.layer.9.attention.output.LayerNorm.bias",
    "bert.encoder.layer.9.intermediate.dense.weight",
    "bert.encoder.layer.9.intermediate.dense.bias",
    "bert.encoder.layer.9.output.dense.weight",
    "bert.encoder.layer.9.output.dense.bias",
    "bert.encoder.layer.9.output.LayerNorm.weight",
    "bert.encoder.layer.9.output.LayerNorm.bias",
    "bert.encoder.layer.10.attention.self.query.weight",
    "bert.encoder.layer.10.attention.self.query.bias",
    "bert.encoder.layer.10.attention.self.key.weight",
    "bert.encoder.layer.10.attention.self.key.bias",
    "bert.encoder.layer.10.attention.self.value.weight",
    "bert.encoder.layer.10.attention.self.value.bias",
    "bert.encoder.layer.10.attention.output.dense.weight",
    "bert.encoder.layer.10.attention.output.dense.bias",
    "bert.encoder.layer.10.attention.output.LayerNorm.weight",
    "bert.encoder.layer.10.attention.output.LayerNorm.bias",
    "bert.encoder.layer.10.intermediate.dense.weight",
    "bert.encoder.layer.10.intermediate.dense.bias",
    "bert.encoder.layer.10.output.dense.weight",
    "bert.encoder.layer.10.output.dense.bias",
    "bert.encoder.layer.10.output.LayerNorm.weight",
    "bert.encoder.layer.10.output.LayerNorm.bias",
    "bert.encoder.layer.11.attention.self.query.weight",
    "bert.encoder.layer.11.attention.self.query.bias",
    "bert.encoder.layer.11.attention.self.key.weight",
    "bert.encoder.layer.11.attention.self.key.bias",
    "bert.encoder.layer.11.attention.self.value.weight",
    "bert.encoder.layer.11.attention.self.value.bias",
    "bert.encoder.layer.11.attention.output.dense.weight",
    "bert.encoder.layer.11.attention.output.dense.bias",
    "bert.encoder.layer.11.attention.output.LayerNorm.weight",
    "bert.encoder.layer.11.attention.output.LayerNorm.bias",
    "bert.encoder.layer.11.intermediate.dense.weight",
    "bert.encoder.layer.11.intermediate.dense.bias",
    "bert.encoder.layer.11.output.dense.weight",
    "bert.encoder.layer.11.output.dense.bias",
    "bert.encoder.layer.11.output.LayerNorm.weight",
    "bert.encoder.layer.11.output.LayerNorm.bias",
    "bert.pooler.dense.weight",
    "bert.pooler.dense.bias",
    "classifier.weight",
    "classifier.bias"
]
Number of differentiable params: 109.484 million
privacy_args: 
{
    "noise_type": "Gaussian",
    "config_idx": 0,
    "per_example_max_grad_norm": 3.0,
    "noise_multiplier": 1.450146484375,
    "target_epsilon": 0.6776754134398772,
    "target_delta": 4.773588688504244e-06,
    "non_private": false,
    "accounting_mode": "rdp",
    "clipping_mode": "ghost"
}
{'not_entailment': 'no', 'entailment': 'yes'}
*cls**sent-_0*?*mask*,*+sentl_1**sep+*
metrics: 
{
    "eval_loss": 0.7078123688697815,
    "eval_acc": 0.5026542192934286
}
dev objective eval_acc: 0.5026542192934286
metrics: 
{
    "eval_loss": 0.7454307675361633,
    "eval_acc": 0.8178656415888705
}
dev objective eval_acc: 0.8178656415888705
metrics: 
{
    "eval_loss": 0.8010292649269104,
    "eval_acc": 0.8173164927695405
}
dev objective eval_acc: 0.8173164927695405
metrics: 
{
    "eval_loss": 0.9520459175109863,
    "eval_acc": 0.7836353651839648
}
dev objective eval_acc: 0.7836353651839648
metrics: 
{
    "eval_loss": 0.8494452834129333,
    "eval_acc": 0.7991945817316493
}
dev objective eval_acc: 0.7991945817316493
running time: 5310.60 seconds... [about 1.4751666747861438 hours]
Running command:

CUDA_VISIBLE_DEVICES=2 python -m classification.run_classification_final   --per_device_train_batch_size 170   --task_name qnli --model_name_or_path bert-base-uncased   --noise_type Gaussian --target_epsilon 0.6776754134398772 --per_example_max_grad_norm 3    --non_private no --config_idx 0 --output_dir /mnt/backup/home/qiy22005/PRO/plrvo/scripts/results/classification/qnli/Gaussian.bert-base-uncased.clip_3.eps_0.6776754134398772 --overwrite_output_dir   --gradient_accumulation_steps 6 --num_train_epochs 3   --learning_rate 0.001 --clipping_mode ghost --few_shot_type finetune --data_dir classification/data/original/QNLI   --seed 42 --randomly_initialize no --store_grads no --template *cls**sent-_0*?*mask*,*+sentl_1**sep+*   --attention_only no --static_lm_head no --static_embedding no   --eval_steps 100 --eval_spectrum no --max_spectrum_batches 2 --max_lanczos_iter 2   --weight_decay 0 --lr_decay no --adam_epsilon 1e-08 --max_seq_len 256 --per_device_eval_batch_size 100   --evaluation_strategy steps --evaluate_before_training True --do_train --do_eval --num_sample 1 --num_k 1   --first_sent_limit 200 --other_sent_limit 200 --truncate_head yes 
